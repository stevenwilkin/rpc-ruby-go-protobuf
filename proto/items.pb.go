// Code generated by protoc-gen-go.
// source: proto/items.proto
// DO NOT EDIT!

/*
Package itemsproto is a generated protocol buffer package.

It is generated from these files:
	proto/items.proto

It has these top-level messages:
	Item
	AllResponse
	CreateRequest
	GetRequest
	UpdateRequest
	DeleteRequest
	Empty
*/
package itemsproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Item struct {
	Id   uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Text string `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
}

func (m *Item) Reset()                    { *m = Item{} }
func (m *Item) String() string            { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()               {}
func (*Item) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type AllResponse struct {
	Items []*Item `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (m *AllResponse) Reset()                    { *m = AllResponse{} }
func (m *AllResponse) String() string            { return proto.CompactTextString(m) }
func (*AllResponse) ProtoMessage()               {}
func (*AllResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AllResponse) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

type CreateRequest struct {
	Text string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type GetRequest struct {
	Id uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type UpdateRequest struct {
	Id   uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Text string `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type DeleteRequest struct {
	Id uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteRequest) Reset()                    { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()               {}
func (*DeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func init() {
	proto.RegisterType((*Item)(nil), "itemsproto.Item")
	proto.RegisterType((*AllResponse)(nil), "itemsproto.AllResponse")
	proto.RegisterType((*CreateRequest)(nil), "itemsproto.CreateRequest")
	proto.RegisterType((*GetRequest)(nil), "itemsproto.GetRequest")
	proto.RegisterType((*UpdateRequest)(nil), "itemsproto.UpdateRequest")
	proto.RegisterType((*DeleteRequest)(nil), "itemsproto.DeleteRequest")
	proto.RegisterType((*Empty)(nil), "itemsproto.Empty")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Items service

type ItemsClient interface {
	All(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*AllResponse, error)
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*Empty, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Item, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*Item, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*Empty, error)
}

type itemsClient struct {
	cc *grpc.ClientConn
}

func NewItemsClient(cc *grpc.ClientConn) ItemsClient {
	return &itemsClient{cc}
}

func (c *itemsClient) All(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*AllResponse, error) {
	out := new(AllResponse)
	err := grpc.Invoke(ctx, "/itemsproto.Items/All", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemsClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/itemsproto.Items/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemsClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Item, error) {
	out := new(Item)
	err := grpc.Invoke(ctx, "/itemsproto.Items/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemsClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*Item, error) {
	out := new(Item)
	err := grpc.Invoke(ctx, "/itemsproto.Items/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *itemsClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/itemsproto.Items/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Items service

type ItemsServer interface {
	All(context.Context, *Empty) (*AllResponse, error)
	Create(context.Context, *CreateRequest) (*Empty, error)
	Get(context.Context, *GetRequest) (*Item, error)
	Update(context.Context, *UpdateRequest) (*Item, error)
	Delete(context.Context, *DeleteRequest) (*Empty, error)
}

func RegisterItemsServer(s *grpc.Server, srv ItemsServer) {
	s.RegisterService(&_Items_serviceDesc, srv)
}

func _Items_All_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemsServer).All(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/itemsproto.Items/All",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemsServer).All(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Items_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemsServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/itemsproto.Items/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemsServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Items_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemsServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/itemsproto.Items/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemsServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Items_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemsServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/itemsproto.Items/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemsServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Items_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemsServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/itemsproto.Items/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemsServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Items_serviceDesc = grpc.ServiceDesc{
	ServiceName: "itemsproto.Items",
	HandlerType: (*ItemsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "All",
			Handler:    _Items_All_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _Items_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Items_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Items_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Items_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("proto/items.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 267 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x50, 0xc1, 0x4a, 0xc3, 0x40,
	0x14, 0x24, 0x49, 0x13, 0x71, 0x4a, 0xc4, 0xbe, 0x83, 0xd6, 0x20, 0x28, 0x2b, 0x48, 0xf1, 0x90,
	0x62, 0x4b, 0xbd, 0x8b, 0x8a, 0x78, 0x5d, 0xf0, 0x03, 0x94, 0xbe, 0x43, 0x21, 0x35, 0xb1, 0xfb,
	0x04, 0xfd, 0x0d, 0xbf, 0xd8, 0xed, 0x06, 0xed, 0xae, 0x8d, 0xe0, 0x6d, 0xde, 0xbe, 0x37, 0xb3,
	0x33, 0x83, 0x41, 0xb3, 0xaa, 0xa5, 0x1e, 0x2f, 0x84, 0x97, 0xa6, 0x74, 0x98, 0xe0, 0x06, 0x87,
	0xd5, 0x05, 0x7a, 0x0f, 0x76, 0xa2, 0x3d, 0xc4, 0x8b, 0xf9, 0x30, 0x3a, 0x8d, 0x46, 0xb9, 0xb6,
	0x88, 0x08, 0x3d, 0xe1, 0x77, 0x19, 0xc6, 0xf6, 0x65, 0x57, 0x3b, 0xac, 0x66, 0xe8, 0x5f, 0x57,
	0x95, 0x66, 0xd3, 0xd4, 0x2f, 0x86, 0xe9, 0x1c, 0xa9, 0x13, 0xb2, 0xac, 0x64, 0xd4, 0x9f, 0xec,
	0x97, 0x1b, 0xd9, 0x72, 0xad, 0xa9, 0xdb, 0xb5, 0x3a, 0x43, 0x7e, 0xb3, 0xe2, 0x27, 0x61, 0xcd,
	0xaf, 0x6f, 0x6c, 0xe4, 0x47, 0x3b, 0xf2, 0xb4, 0x8f, 0x81, 0x7b, 0x96, 0xef, 0x8b, 0x5f, 0x6e,
	0xd4, 0x14, 0xf9, 0x63, 0x33, 0xf7, 0x24, 0xfe, 0x63, 0xf7, 0x04, 0xf9, 0x2d, 0x57, 0xfc, 0x27,
	0x49, 0xed, 0x20, 0xbd, 0x5b, 0x36, 0xf2, 0x31, 0xf9, 0x8c, 0x91, 0xae, 0x1d, 0x1b, 0xba, 0x44,
	0x62, 0x23, 0xd2, 0xc0, 0xcf, 0xe2, 0x6e, 0x8a, 0x43, 0xff, 0xc9, 0xaf, 0xe1, 0x0a, 0x59, 0x1b,
	0x8f, 0x8e, 0xfc, 0x93, 0x20, 0x72, 0xb1, 0x2d, 0x48, 0x63, 0x24, 0x36, 0x31, 0x1d, 0xf8, 0x9b,
	0x4d, 0x05, 0xc5, 0x56, 0x9d, 0x34, 0x43, 0xd6, 0x96, 0x10, 0x7e, 0x14, 0x14, 0xd3, 0x41, 0xb3,
	0xfe, 0xda, 0x1a, 0x42, 0x5a, 0x50, 0x4d, 0x87, 0xbf, 0xe7, 0xcc, 0x0d, 0xd3, 0xaf, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xb6, 0x37, 0x34, 0xc8, 0x41, 0x02, 0x00, 0x00,
}
